<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Straw</title>
  
  <subtitle>Straw_blog</subtitle>
  <link href="https://straw-233.github.io/atom.xml" rel="self"/>
  
  <link href="https://straw-233.github.io/"/>
  <updated>2023-12-07T13:07:44.640Z</updated>
  <id>https://straw-233.github.io/</id>
  
  <author>
    <name>Straw</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java学习（1）</title>
    <link href="https://straw-233.github.io/2023/12/07/java%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/"/>
    <id>https://straw-233.github.io/2023/12/07/java%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/</id>
    <published>2023-12-07T12:56:00.738Z</published>
    <updated>2023-12-07T13:07:44.640Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java学习（1）"><a href="#java学习（1）" class="headerlink" title="java学习（1）"></a>java学习（1）</h1><h3 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Root1</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        Random r=<span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt; arr.length ;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> index=r.nextInt(arr.length);</span><br><span class="line">            <span class="type">int</span> temp= arr[i];</span><br><span class="line">            arr[i]=arr[index];</span><br><span class="line">            arr[index]=temp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;arr.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">           System.out.print(arr[i]+<span class="string">&quot; &quot;</span>); </span><br><span class="line">        &#125;        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 3 5 2 4//随机</span><br></pre></td></tr></table></figure><h3 id="scanf读入-方法"><a href="#scanf读入-方法" class="headerlink" title="scanf读入+方法"></a>scanf读入+方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Root2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(getSum1(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> put=sc.nextInt();</span><br><span class="line">        System.out.println(put);</span><br><span class="line">        sc.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">getSum</span><span class="params">(<span class="type">int</span> num1,<span class="type">int</span> num2)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> result=num1+num2;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getSum1</span><span class="params">(<span class="type">int</span> num1,<span class="type">int</span> num2)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> result=num1+num2;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">114514</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">114514</span><br></pre></td></tr></table></figure><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Root3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Girlfriend gf1=<span class="keyword">new</span> <span class="title class_">Girlfriend</span>();</span><br><span class="line">        gf1.name=<span class="string">&quot;神里绫华&quot;</span>;</span><br><span class="line">        gf1.age=<span class="number">21</span>;</span><br><span class="line">        gf1.gender=<span class="string">&quot;神里家的大小姐&quot;</span>;</span><br><span class="line">        System.out.println(gf1.name+<span class="string">&quot; &quot;</span>+gf1.age+<span class="string">&quot; &quot;</span>+gf1.gender);</span><br><span class="line">        gf1.eat();</span><br><span class="line">        gf1.sleep();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Girlfriend</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    String gender;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;女朋友在睡觉&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;女朋友在吃饭&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">神里绫华 21 神里家的大小姐</span><br><span class="line">女朋友在吃饭</span><br><span class="line">女朋友在睡觉</span><br></pre></td></tr></table></figure><p><img src="/../img/%E7%8E%A9%E5%8E%9F%E7%A5%9E.jpg" alt="玩原神"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;java学习（1）&quot;&gt;&lt;a href=&quot;#java学习（1）&quot; class=&quot;headerlink&quot; title=&quot;java学习（1）&quot;&gt;&lt;/a&gt;java学习（1）&lt;/h1&gt;&lt;h3 id=&quot;随机数&quot;&gt;&lt;a href=&quot;#随机数&quot; class=&quot;headerlink</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>浙江省2023网络安全信息竞赛(初赛)Reverse 复现</title>
    <link href="https://straw-233.github.io/2023/11/07/2023%E7%9C%81%E8%B5%9B(%E5%88%9D%E8%B5%9B)Reverse%20%E5%A4%8D%E7%8E%B0/"/>
    <id>https://straw-233.github.io/2023/11/07/2023%E7%9C%81%E8%B5%9B(%E5%88%9D%E8%B5%9B)Reverse%20%E5%A4%8D%E7%8E%B0/</id>
    <published>2023-11-07T10:02:21.192Z</published>
    <updated>2023-11-07T10:20:47.855Z</updated>
    
    <content type="html"><![CDATA[<h1 id="浙江省2023网络安全信息竞赛-初赛-Reverse-复现"><a href="#浙江省2023网络安全信息竞赛-初赛-Reverse-复现" class="headerlink" title="浙江省2023网络安全信息竞赛(初赛)Reverse 复现"></a>浙江省2023网络安全信息竞赛(初赛)Reverse 复现</h1><p>​<em><strong>我是fw，赛场上纯纯坐牢，只会复现</strong></em></p><p><img src="/../img/%E5%B0%8F%E8%8F%B2%E5%93%AD.gif" alt="小菲哭"></p><h2 id="luare"><a href="#luare" class="headerlink" title="luare"></a>luare</h2><p>主函数</p><p><img src="/../img/2023%20Reverse%E7%9C%81%E8%B5%9B/1.1.png" alt="1.1"></p><p>这里是一段lua的字节码，调试到这一步，提取</p><p><img src="/../img/2023%20Reverse%E7%9C%81%E8%B5%9B/1.2.png" alt="1.2"></p><p>学了一手，有个java的unluac.jar反编译脚本，输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar .\unluac.jar lua</span><br></pre></td></tr></table></figure><p><img src="/../img/2023%20Reverse%E7%9C%81%E8%B5%9B/1.3.png" alt="1.3"></p><p>里面的Oo00Oo0在ida里面</p><p><img src="/../img/2023%20Reverse%E7%9C%81%E8%B5%9B/1.4.png" alt="1.4"></p><p>仔细研究一下，是一个查表+异或，关键就在那个ptr的for函数里</p><p>给出脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">pw=[<span class="number">109</span>,-<span class="number">73</span>,-<span class="number">72</span>,<span class="number">46</span>,-<span class="number">73</span>,-<span class="number">5</span>,<span class="number">99</span>,-<span class="number">100</span>,<span class="number">46</span>,<span class="number">59</span>,<span class="number">32</span>,-<span class="number">76</span>,<span class="number">109</span>,<span class="number">3</span>,<span class="number">59</span>,<span class="number">20</span>,-<span class="number">61</span>,-<span class="number">56</span>,</span><br><span class="line">    -<span class="number">119</span>,<span class="number">48</span>,<span class="number">100</span>,<span class="number">118</span>,<span class="number">36</span>,<span class="number">118</span>,<span class="number">82</span>,<span class="number">3</span>,<span class="number">95</span>,<span class="number">106</span>,<span class="number">14</span>,-<span class="number">80</span>,<span class="number">5</span>,-<span class="number">89</span>,<span class="number">89</span>,-<span class="number">85</span>,<span class="number">5</span>,<span class="number">14</span>,<span class="number">46</span>,</span><br><span class="line">   -<span class="number">73</span>,<span class="number">7</span>,<span class="number">127</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(pw)):</span><br><span class="line">    pw[i]=pw[i]&amp;<span class="number">0xff</span></span><br><span class="line">table=[ <span class="number">0x3C</span>, <span class="number">0x95</span>, <span class="number">0xC8</span>, <span class="number">0x28</span>, <span class="number">0x10</span>, <span class="number">0x6D</span>, <span class="number">0x85</span>, <span class="number">0x60</span>, <span class="number">0x59</span>, <span class="number">0x03</span>,<span class="number">0xB3</span>, <span class="number">0x4C</span>, <span class="number">0x76</span>, <span class="number">0x49</span>, <span class="number">0x48</span>, <span class="number">0x96</span>,</span><br><span class="line">        <span class="number">0xB8</span>, <span class="number">0x5F</span>, <span class="number">0xB7</span>, <span class="number">0x79</span>, <span class="number">0xC4</span>, <span class="number">0x64</span>, <span class="number">0x71</span>, <span class="number">0x2E</span>, <span class="number">0x38</span>, <span class="number">0x8C</span>, <span class="number">0xAC</span>,<span class="number">0xA7</span>, <span class="number">0x91</span>, <span class="number">0x72</span>, <span class="number">0x63</span>, <span class="number">0x80</span>,</span><br><span class="line">        <span class="number">0xB0</span>, <span class="number">0x9E</span>, <span class="number">0x33</span>, <span class="number">0x4B</span>, <span class="number">0xAE</span>, <span class="number">0xF3</span>, <span class="number">0x8B</span>, <span class="number">0x7B</span>, <span class="number">0x4D</span>, <span class="number">0x5B</span>, <span class="number">0xB4</span>,<span class="number">0x52</span>, <span class="number">0xEC</span>, <span class="number">0x6F</span>, <span class="number">0xE0</span>, <span class="number">0xCF</span>,</span><br><span class="line">        <span class="number">0xAD</span>, <span class="number">0xC3</span>, <span class="number">0x20</span>, <span class="number">0xAB</span>, <span class="number">0xEA</span>, <span class="number">0x67</span>, <span class="number">0xDC</span>, <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x9F</span>, <span class="number">0x40</span>,<span class="number">0x56</span>, <span class="number">0xD6</span>, <span class="number">0xFB</span>, <span class="number">0xFC</span>, <span class="number">0x24</span>,</span><br><span class="line">        <span class="number">0x92</span>, <span class="number">0xCA</span>, <span class="number">0x0B</span>, <span class="number">0x3D</span>, <span class="number">0x46</span>, <span class="number">0x0D</span>, <span class="number">0xF0</span>, <span class="number">0x4A</span>, <span class="number">0x5A</span>, <span class="number">0x55</span>, <span class="number">0x11</span>,<span class="number">0x1A</span>, <span class="number">0x3B</span>, <span class="number">0x8A</span>, <span class="number">0xBC</span>, <span class="number">0x7D</span>,</span><br><span class="line">        <span class="number">0x6C</span>, <span class="number">0xE7</span>, <span class="number">0xA9</span>, <span class="number">0x13</span>, <span class="number">0x75</span>, <span class="number">0xCE</span>, <span class="number">0x61</span>, <span class="number">0x30</span>, <span class="number">0x14</span>, <span class="number">0xA6</span>, <span class="number">0x6A</span>,<span class="number">0x27</span>, <span class="number">0x07</span>, <span class="number">0xD0</span>, <span class="number">0x54</span>, <span class="number">0x9C</span>,</span><br><span class="line">        <span class="number">0x5C</span>, <span class="number">0x8E</span>, <span class="number">0x89</span>, <span class="number">0xD8</span>, <span class="number">0x58</span>, <span class="number">0x01</span>, <span class="number">0xC2</span>, <span class="number">0x34</span>, <span class="number">0xE8</span>, <span class="number">0x69</span>, <span class="number">0x35</span>,<span class="number">0x2F</span>, <span class="number">0xC0</span>, <span class="number">0x2A</span>, <span class="number">0xA0</span>, <span class="number">0x50</span>,</span><br><span class="line">        <span class="number">0x36</span>, <span class="number">0x88</span>, <span class="number">0xFF</span>, <span class="number">0x39</span>, <span class="number">0x1D</span>, <span class="number">0x68</span>, <span class="number">0x0E</span>, <span class="number">0x0C</span>, <span class="number">0x93</span>, <span class="number">0xE6</span>, <span class="number">0xB1</span>,<span class="number">0xFE</span>, <span class="number">0x18</span>, <span class="number">0x7F</span>, <span class="number">0x6E</span>, <span class="number">0xB6</span>,</span><br><span class="line">        <span class="number">0x78</span>, <span class="number">0x53</span>, <span class="number">0x31</span>, <span class="number">0x2B</span>, <span class="number">0xE9</span>, <span class="number">0xD2</span>, <span class="number">0xF5</span>, <span class="number">0x29</span>, <span class="number">0x0F</span>, <span class="number">0x2C</span>, <span class="number">0x17</span>,<span class="number">0x84</span>, <span class="number">0xDE</span>, <span class="number">0xDB</span>, <span class="number">0xD9</span>, <span class="number">0x41</span>,</span><br><span class="line">        <span class="number">0x06</span>, <span class="number">0x19</span>, <span class="number">0xF7</span>, <span class="number">0xA1</span>, <span class="number">0x99</span>, <span class="number">0xA8</span>, <span class="number">0x45</span>, <span class="number">0x7A</span>, <span class="number">0x3E</span>, <span class="number">0x23</span>, <span class="number">0xA5</span>,<span class="number">0x1B</span>, <span class="number">0xAF</span>, <span class="number">0x0A</span>, <span class="number">0xAA</span>, <span class="number">0xE5</span>,</span><br><span class="line">        <span class="number">0xEF</span>, <span class="number">0xA4</span>, <span class="number">0xE1</span>, <span class="number">0xF8</span>, <span class="number">0xFA</span>, <span class="number">0x82</span>, <span class="number">0x3A</span>, <span class="number">0x9A</span>, <span class="number">0xDF</span>, <span class="number">0x8F</span>, <span class="number">0x1C</span>,<span class="number">0x65</span>, <span class="number">0xC7</span>, <span class="number">0x73</span>, <span class="number">0xD1</span>, <span class="number">0xC1</span>,</span><br><span class="line">        <span class="number">0xC5</span>, <span class="number">0xD7</span>, <span class="number">0xA2</span>, <span class="number">0x5E</span>, <span class="number">0x87</span>, <span class="number">0xDD</span>, <span class="number">0x9D</span>, <span class="number">0x8D</span>, <span class="number">0xF9</span>, <span class="number">0xC9</span>, <span class="number">0x81</span>,<span class="number">0xCD</span>, <span class="number">0x90</span>, <span class="number">0x97</span>, <span class="number">0xEE</span>, <span class="number">0x66</span>,</span><br><span class="line">        <span class="number">0xDA</span>, <span class="number">0x4F</span>, <span class="number">0x42</span>, <span class="number">0x3F</span>, <span class="number">0xC6</span>, <span class="number">0x74</span>, <span class="number">0x08</span>, <span class="number">0x37</span>, <span class="number">0x25</span>, <span class="number">0xCB</span>, <span class="number">0x77</span>,<span class="number">0x26</span>, <span class="number">0xE3</span>, <span class="number">0x83</span>, <span class="number">0x32</span>, <span class="number">0xB9</span>,</span><br><span class="line">        <span class="number">0xBD</span>, <span class="number">0xD3</span>, <span class="number">0xF2</span>, <span class="number">0x44</span>, <span class="number">0xD5</span>, <span class="number">0x4E</span>, <span class="number">0x2D</span>, <span class="number">0xBA</span>, <span class="number">0x62</span>, <span class="number">0x98</span>, <span class="number">0x04</span>,<span class="number">0x1E</span>, <span class="number">0x12</span>, <span class="number">0x21</span>, <span class="number">0xE4</span>, <span class="number">0xBF</span>,</span><br><span class="line">        <span class="number">0x47</span>, <span class="number">0xF6</span>, <span class="number">0x86</span>, <span class="number">0xF4</span>, <span class="number">0xFD</span>, <span class="number">0x94</span>, <span class="number">0x16</span>, <span class="number">0xA3</span>, <span class="number">0xEB</span>, <span class="number">0x1F</span>, <span class="number">0x70</span>,<span class="number">0x7C</span>, <span class="number">0xB2</span>, <span class="number">0x51</span>, <span class="number">0x02</span>, <span class="number">0x43</span>,</span><br><span class="line">        <span class="number">0x22</span>, <span class="number">0x15</span>, <span class="number">0xCC</span>, <span class="number">0x7E</span>, <span class="number">0x09</span>, <span class="number">0x6B</span>, <span class="number">0xE2</span>, <span class="number">0x5D</span>, <span class="number">0xBB</span>, <span class="number">0x9B</span>, <span class="number">0xBE</span>,<span class="number">0xB5</span>, <span class="number">0xD4</span>, <span class="number">0xED</span>, <span class="number">0x57</span>, <span class="number">0xF1</span>]</span><br><span class="line">s=[<span class="number">0</span>]*<span class="number">40</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">40</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        <span class="keyword">if</span> table[i]==pw[j]:</span><br><span class="line">            s[j]=i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(s[j],end=<span class="string">&quot;,&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line">start=<span class="number">0x44</span>  <span class="comment">#&quot;D&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">40</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(start),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    start=start^s[i]</span><br><span class="line"><span class="comment">#DASCTF&#123;e:-aSy|u9aPR0gr~AMfo~$RrE^VeR$3!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="AndriodELF"><a href="#AndriodELF" class="headerlink" title="AndriodELF"></a>AndriodELF</h2><p><img src="/../img/2023%20Reverse%E7%9C%81%E8%B5%9B/2.1.png" alt="2.1"></p><p>有个UPX壳，还是魔改壳</p><p><img src="/../img/2023%20Reverse%E7%9C%81%E8%B5%9B/2.2.png" alt="2.2"></p><p>把最后两个upx改UPX才能用脚本出</p><p>主函数</p><p><img src="/../img/2023%20Reverse%E7%9C%81%E8%B5%9B/2.3.png" alt="2.3"></p><p>然后进sub_218FB4函数</p><p><img src="/../img/2023%20Reverse%E7%9C%81%E8%B5%9B/2.4.png" alt="2.4"></p><p>四个加密逐一逆向，给出脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> pw[<span class="number">64</span>] = &#123;</span><br><span class="line"><span class="number">0x3D</span>, <span class="number">0x45</span>, <span class="number">0x38</span>, <span class="number">0x7E</span>, <span class="number">0x78</span>, <span class="number">0x4B</span>, <span class="number">0x6A</span>, <span class="number">0x5C</span>, <span class="number">0x5B</span>, <span class="number">0x52</span>, <span class="number">0x4C</span>, <span class="number">0x73</span>, <span class="number">0x4E</span>, <span class="number">0x39</span>, <span class="number">0x49</span>, <span class="number">0x5F</span>, </span><br><span class="line"><span class="number">0x49</span>, <span class="number">0x40</span>, <span class="number">0x38</span>, <span class="number">0x5E</span>, <span class="number">0x74</span>, <span class="number">0x40</span>, <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x46</span>, <span class="number">0x7A</span>, <span class="number">0x39</span>, <span class="number">0x3B</span>, <span class="number">0x67</span>, <span class="number">0x39</span>, <span class="number">0x70</span>, <span class="number">0x6C</span>, </span><br><span class="line"><span class="number">0x71</span>, <span class="number">0x5E</span>, <span class="number">0x6D</span>, <span class="number">0x4D</span>, <span class="number">0x5A</span>, <span class="number">0x4C</span>, <span class="number">0x7F</span>, <span class="number">0x3B</span>, <span class="number">0x4D</span>, <span class="number">0x63</span>, <span class="number">0x5E</span>, <span class="number">0x4E</span>, <span class="number">0x44</span>, <span class="number">0x5A</span>, <span class="number">0x7B</span>, <span class="number">0x51</span>, </span><br><span class="line"><span class="number">0x38</span>, <span class="number">0x61</span>, <span class="number">0x29</span>, <span class="number">0x63</span>, <span class="number">0x75</span>, <span class="number">0x5B</span>, <span class="number">0x67</span>, <span class="number">0x46</span>, <span class="number">0x4E</span>, <span class="number">0x5D</span>, <span class="number">0x79</span>, <span class="number">0x29</span>, <span class="number">0x4D</span>, <span class="number">0x29</span>, <span class="number">0x6D</span>, <span class="number">0x71</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> table[<span class="number">16</span>] = &#123;</span><br><span class="line"><span class="number">0x0000000D</span>, <span class="number">0x00000004</span>, <span class="number">0x00000000</span>, <span class="number">0x00000005</span>, <span class="number">0x00000002</span>, <span class="number">0x0000000C</span>, <span class="number">0x0000000B</span>, <span class="number">0x00000008</span>, </span><br><span class="line"><span class="number">0x0000000A</span>, <span class="number">0x00000006</span>, <span class="number">0x00000001</span>, <span class="number">0x00000009</span>, <span class="number">0x00000003</span>, <span class="number">0x0000000F</span>, <span class="number">0x00000007</span>, <span class="number">0x0000000E</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> flag[<span class="number">64</span>];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> v[<span class="number">64</span>];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> pw1[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> o=<span class="number">0</span>;o&lt;<span class="number">4</span>;o++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">16</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">pw1[j]=pw[o*<span class="number">16</span>+j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">15</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">v[i]=pw1[i]^(<span class="number">120</span>*j);<span class="comment">//加密4 异或120*j</span></span><br><span class="line">v[i]=(v[i]&lt;&lt;<span class="number">5</span>)|(v[i]&gt;&gt;<span class="number">3</span>);<span class="comment">//加密3 移位</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]=v[table[i]];</span><br><span class="line">&#125;<span class="comment">//加密2 换表</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> v1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> l=<span class="number">0</span>;l&lt;<span class="number">8</span>;l++)</span><br><span class="line">&#123;</span><br><span class="line">v1|=((flag[i]&gt;&gt;l)&amp;<span class="number">1</span>)&lt;&lt;(<span class="number">7</span>-l);</span><br><span class="line">&#125;</span><br><span class="line">flag[i]=v1;</span><br><span class="line">&#125;<span class="comment">//加密1 循环移位</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>;x&lt;<span class="number">16</span>;x++)</span><br><span class="line">&#123;</span><br><span class="line">pw1[x]=flag[x];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,pw1[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//DASCTF&#123;51bWZvM0p1xNHLo3A1ndrVH0|VsED3LFyRwYkEVeRqeFSNE!0!oyUki!&#125;</span></span><br><span class="line"><span class="comment">//flag给这么长我也醉了</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;浙江省2023网络安全信息竞赛-初赛-Reverse-复现&quot;&gt;&lt;a href=&quot;#浙江省2023网络安全信息竞赛-初赛-Reverse-复现&quot; class=&quot;headerlink&quot; title=&quot;浙江省2023网络安全信息竞赛(初赛)Reverse 复现&quot;&gt;&lt;/a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Tea类型加密</title>
    <link href="https://straw-233.github.io/2023/11/01/tea%E5%8A%A0%E5%AF%86/"/>
    <id>https://straw-233.github.io/2023/11/01/tea%E5%8A%A0%E5%AF%86/</id>
    <published>2023-11-01T13:43:08.336Z</published>
    <updated>2023-11-01T13:51:31.223Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tea类型加密"><a href="#Tea类型加密" class="headerlink" title="Tea类型加密"></a><strong>Tea类型加密</strong></h1><p>​        很早就想概括tea类型加密了，对于很多刚开始做逆向的新手来说，这个掌握好了解题确实快，不像之前的我找到了key，密文，算法，还是因为小错误，而解不出来。作为最基础，也是最常见的加密，确实需要好好总结一番的喵~!</p><p><img src="/../img/taffychayao.png" alt="taffychayao"></p><h2 id="Tea"><a href="#Tea" class="headerlink" title="Tea"></a>Tea</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">encrypt</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span>* v, <span class="type">unsigned</span> <span class="type">int</span>* key)</span> &#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> l = v[<span class="number">0</span>], r = v[<span class="number">1</span>], sum = <span class="number">0</span>, delta = <span class="number">0x9e3779b9</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">    sum += delta;</span><br><span class="line">    l += ((r &lt;&lt; <span class="number">4</span>) + key[<span class="number">0</span>]) ^ (r + sum) ^ ((r &gt;&gt; <span class="number">5</span>) + key[<span class="number">1</span>]);</span><br><span class="line">    r += ((l &lt;&lt; <span class="number">4</span>) + key[<span class="number">2</span>]) ^ (l + sum) ^ ((l &gt;&gt; <span class="number">5</span>) + key[<span class="number">3</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  v[<span class="number">0</span>] = l;</span><br><span class="line">  v[<span class="number">1</span>] = r;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">decrypt</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span>* v, <span class="type">unsigned</span> <span class="type">int</span>* key)</span> &#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> l = v[<span class="number">0</span>], r = v[<span class="number">1</span>], sum = <span class="number">0</span>, delta = <span class="number">0x9e3779b9</span>;</span><br><span class="line">  sum = delta *<span class="number">32</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">    r -= ((l &lt;&lt; <span class="number">4</span>) + key[<span class="number">2</span>]) ^ (l + sum) ^ ((l &gt;&gt; <span class="number">5</span>) + key[<span class="number">3</span>]);</span><br><span class="line">    l -= ((r &lt;&lt; <span class="number">4</span>) + key[<span class="number">0</span>]) ^ (r + sum) ^ ((r &gt;&gt; <span class="number">5</span>) + key[<span class="number">1</span>]);</span><br><span class="line">    sum -= delta;</span><br><span class="line">  &#125;</span><br><span class="line">  v[<span class="number">0</span>] = l;</span><br><span class="line">  v[<span class="number">1</span>] = r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实是一个移位+错位+异或操作结合的算法，逆向解密也是十分容易，将flag以4个unsigned char为一组转为unsigned int加密，注意小端序。</p><p>给出一个我常用的解密脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;<span class="comment">//pw的个数</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> pw[]=&#123;&#125;;<span class="comment">//可改</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v0;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v1;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> sum;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;<span class="comment">//可改</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n/<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">v0=pw[<span class="number">2</span>*i];</span><br><span class="line">v1=pw[<span class="number">2</span>*i+<span class="number">1</span>];</span><br><span class="line">sum=<span class="number">-32</span>*<span class="number">0x61C88647</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">v1 -= ((v0 &gt;&gt; <span class="number">5</span>) + key[<span class="number">3</span>] )^ (<span class="number">16</span> * v0 + key[<span class="number">2</span>]) ^ (sum + v0);<span class="comment">//容易魔改</span></span><br><span class="line">v0 -= ((v1 &gt;&gt; <span class="number">5</span>) + key[<span class="number">1</span>]) ^ (<span class="number">16</span> * v1 + key[<span class="number">0</span>]) ^ (sum + v1);</span><br><span class="line">sum += <span class="number">0x61C88647</span>;<span class="comment">//容易魔改</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j&lt;=<span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (v0 &gt;&gt; (j * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j&lt;=<span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (v1 &gt;&gt; (j * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大多数题目都是给出偶数个unsigned int(4个字节)的密文m，每两段为一组，每一段密文对应的都是4个字母的flag。</p><p>这里再给一个python的脚本（我不怎么常用）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> * </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">v,k</span>):<span class="comment">#加密</span></span><br><span class="line">v0=c_uint32(v[<span class="number">0</span>])</span><br><span class="line">v1=c_uint32(v[<span class="number">1</span>])</span><br><span class="line">sum1=c_uint32(<span class="number">0</span>)</span><br><span class="line">delta=<span class="number">0x9e3779b9</span>  </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">sum1.value+=delta</span><br><span class="line">v0.value+=((v1.value&lt;&lt;<span class="number">4</span>)+k[<span class="number">0</span>])^(v1.value+sum1.value)^((v1.value&gt;&gt;<span class="number">5</span>)+k[<span class="number">1</span>])</span><br><span class="line">v1.value+=((v0.value&lt;&lt;<span class="number">4</span>)+k[<span class="number">2</span>])^(v0.value+sum1.value)^((v0.value&gt;&gt;<span class="number">5</span>)+k[<span class="number">3</span>])</span><br><span class="line"><span class="keyword">return</span> v0.value,v1.value</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">v,k</span>):<span class="comment">#解密</span></span><br><span class="line">v0=c_uint32(v[<span class="number">0</span>])</span><br><span class="line">v1=c_uint32(v[<span class="number">1</span>])</span><br><span class="line">delta=<span class="number">0x9e3779b9</span> </span><br><span class="line">sum1=c_uint32(delta*<span class="number">40</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">40</span>):</span><br><span class="line">v1.value-=((v0.value&lt;&lt;<span class="number">5</span>)+k[<span class="number">2</span>])^(v0.value+sum1.value)^((v0.value&gt;&gt;<span class="number">5</span>)+k[<span class="number">3</span>])</span><br><span class="line">v0.value-=((v1.value&lt;&lt;<span class="number">5</span>)+k[<span class="number">0</span>])^(v1.value+sum1.value)^((v1.value&gt;&gt;<span class="number">5</span>)+k[<span class="number">1</span>])</span><br><span class="line">sum1.value-=delta</span><br><span class="line"><span class="keyword">return</span> v0.value,v1.value</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    k=[<span class="number">2</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="comment"># res=encrypt(a,k)</span></span><br><span class="line">    flag=<span class="string">b&#x27;&#x27;</span></span><br><span class="line">    res=[<span class="number">0x76B9621A</span>, <span class="number">0xCCE4ADDE</span>, <span class="number">0x25C8BFC8</span>, <span class="number">0x16C2D472</span>, <span class="number">0xF317D53A</span>, <span class="number">0xF2A111A1</span>, <span class="number">0xDF89F0E6</span>, <span class="number">0xDCCDA623</span>, <span class="number">0x21C2F409</span>, <span class="number">0xDBD88D63</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(res)//<span class="number">2</span>):</span><br><span class="line">         d = decrypt(res[<span class="number">2</span>*i:<span class="number">2</span>*(i+<span class="number">1</span>)], k)</span><br><span class="line">         flag += long_to_bytes(d[<span class="number">0</span>])[::-<span class="number">1</span>]+long_to_bytes(d[<span class="number">1</span>])[::-<span class="number">1</span>]</span><br><span class="line">    flag += long_to_bytes(res[-<span class="number">1</span>])[::-<span class="number">1</span>]</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h2 id="xTea"><a href="#xTea" class="headerlink" title="xTea"></a>xTea</h2><p>其实跟tea差不多，只是加密方式变了一下</p><p>简单给出加密方式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> n;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> flag[n];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v0,v1;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> delta = <span class="number">0x9E3779B9</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j=j+<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">    v0 = flag[j], v1 = flag[j+<span class="number">1</span>]</span><br><span class="line">    <span class="type">unsigned</span> sum = <span class="number">0</span>; </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">        v0 += (((v1 &lt;&lt; <span class="number">4</span>) ^ (v1 &gt;&gt; <span class="number">5</span>)) + v1) ^ (sum + key[sum &amp; <span class="number">3</span>]);</span><br><span class="line">        sum += delta;</span><br><span class="line">        v1 += (((v0 &lt;&lt; <span class="number">4</span>) ^ (v0 &gt;&gt; <span class="number">5</span>)) + v0) ^ (sum + key[(sum &gt;&gt; <span class="number">11</span>) &amp; <span class="number">3</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">flag[j] = v0; flag[j+<span class="number">1</span>] = v1;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>下面是解密脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> enc[] = &#123;&#125;;</span><br><span class="line"><span class="type">int</span> n;<span class="comment">//enc的个数</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>] = &#123;&#125;;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="type">long</span> sum = <span class="number">0</span>, delta = <span class="number">0x31415927</span>;<span class="comment">//0x9e3779b9=-0x31415927</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i &lt;n;i+=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum = (<span class="number">32</span> * delta);</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">32</span>; j++) </span><br><span class="line">&#123;</span><br><span class="line">sum -= delta;</span><br><span class="line">enc[i] -= (((enc[i+<span class="number">1</span>] &gt;&gt; <span class="number">5</span>) ^ (<span class="number">16</span> * enc[i+<span class="number">1</span>])) + enc[i+<span class="number">1</span>]) ^ (key[(sum &amp; <span class="number">3</span>)] + sum);<span class="comment">//容易魔改</span></span><br><span class="line">enc[i+<span class="number">1</span>] -= (((enc[i] &gt;&gt; <span class="number">5</span>) ^ (<span class="number">16</span> * enc[i])) + enc[i]) ^ (key[((sum &gt;&gt; <span class="number">11</span>) &amp; <span class="number">3</span>)] + sum);<span class="comment">//容易魔改</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 打印</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j&lt;=<span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (enc[i] &gt;&gt; (j * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="xxTea"><a href="#xxTea" class="headerlink" title="xxTea"></a>xxTea</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">xxtea_encrypt</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> *v, <span class="type">int</span> n, <span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>])</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> y, z, sum;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> delta=<span class="number">0x9e3779b9</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> p, rounds, e;</span><br><span class="line">    rounds = <span class="number">6</span> + <span class="number">52</span> / n;</span><br><span class="line">    sum = <span class="number">0</span>;</span><br><span class="line">    z = v[n - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        sum += delta;</span><br><span class="line">        e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span> (p = <span class="number">0</span>; p &lt; n - <span class="number">1</span>; p++) &#123;</span><br><span class="line">            y = v[p + <span class="number">1</span>];</span><br><span class="line">            z = v[p] += (y &gt;&gt; <span class="number">5</span> ^ (z &lt;&lt; <span class="number">2</span>)) + (y &lt;&lt; <span class="number">3</span> ^ (z &gt;&gt; <span class="number">4</span>)) ^ (sum ^ y) + (key[(p &amp; <span class="number">3</span>) ^ e] ^ z);</span><br><span class="line">        &#125;</span><br><span class="line">        y = v[<span class="number">0</span>];</span><br><span class="line">        z = v[n - <span class="number">1</span>] += (y &gt;&gt; <span class="number">5</span> ^ (z &lt;&lt; <span class="number">2</span>)) + (y &lt;&lt; <span class="number">3</span> ^ (z &gt;&gt; <span class="number">4</span>)) ^ (sum ^ y) + (key[(p &amp; <span class="number">3</span>) ^ e] ^ z);</span><br><span class="line">    &#125; <span class="keyword">while</span> (--rounds);</span><br><span class="line">&#125;<span class="comment">//chatgpt跑的</span></span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> delta 0x9e3779b9</span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> v[<span class="number">8</span>] = &#123;<span class="number">0x10BD3B47</span>, <span class="number">0x6155E0F9</span>, <span class="number">0x6AF7EBC5</span>, <span class="number">0x8D23435F</span>, <span class="number">0x1A091605</span>, <span class="number">0xD43D40EF</span>, <span class="number">0xB4B16A67</span>, <span class="number">0x6B3578A9</span>&#125;;<span class="comment">//可改</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>] = &#123;<span class="number">0x00001234</span>, <span class="number">0x00002345</span>, <span class="number">0x00004567</span>, <span class="number">0x00006789</span>&#125;;<span class="comment">//可改</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> y,z,p,rounds,e;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">8</span>;<span class="comment">//v的个数</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    rounds = <span class="number">6</span> + <span class="number">52</span>/n;<span class="comment">//容易魔改</span></span><br><span class="line">    y = v[<span class="number">0</span>];</span><br><span class="line">    sum = rounds*delta;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">     &#123;</span><br><span class="line">        e = sum &gt;&gt; <span class="number">2</span> &amp; <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span>(p=n<span class="number">-1</span>;p&gt;<span class="number">0</span>;p--)</span><br><span class="line">        &#123;</span><br><span class="line">            z = v[p<span class="number">-1</span>];</span><br><span class="line">            v[p] -= ((((z&gt;&gt;<span class="number">5</span>)^(y&lt;&lt;<span class="number">2</span>))+((y&gt;&gt;<span class="number">3</span>)^(z&lt;&lt;<span class="number">4</span>))) ^ ((key[(p&amp;<span class="number">3</span>)^e]^z)+(y ^ sum)));<span class="comment">//容易魔改</span></span><br><span class="line">            y = v[p];</span><br><span class="line">        &#125;</span><br><span class="line">        z = v[n<span class="number">-1</span>];</span><br><span class="line">        v[<span class="number">0</span>] -= (((key[(p^e)&amp;<span class="number">3</span>]^z)+(y ^ sum)) ^ (((y&lt;&lt;<span class="number">2</span>)^(z&gt;&gt;<span class="number">5</span>))+((z&lt;&lt;<span class="number">4</span>)^(y&gt;&gt;<span class="number">3</span>))));<span class="comment">//容易魔改</span></span><br><span class="line">        y = v[<span class="number">0</span>];</span><br><span class="line">        sum = sum-delta;</span><br><span class="line">     &#125;<span class="keyword">while</span>(--rounds);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c&quot;</span>,*((<span class="type">char</span>*)&amp;v[i]+<span class="number">0</span>),*((<span class="type">char</span>*)&amp;v[i]+<span class="number">1</span>),*((<span class="type">char</span>*)&amp;v[i]+<span class="number">2</span>),*((<span class="type">char</span>*)&amp;v[i]+<span class="number">3</span>));</span><br><span class="line">        <span class="comment">//printf(&quot;%c%c%c%c&quot;,*((char*)&amp;v[i]+3),*((char*)&amp;v[i]+2),*((char*)&amp;v[i]+1),*((char*)&amp;v[i]+0));</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><h3 id="2023极客大挑战myslef（tea）"><a href="#2023极客大挑战myslef（tea）" class="headerlink" title="2023极客大挑战myslef（tea）"></a>2023极客大挑战myslef（tea）</h3><p><img src="/../img/myself.png" alt="myself"></p><p>SMC后明显一个tea,甚至密钥都写上去了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> pw[<span class="number">8</span>]=&#123;<span class="number">0xBDBDF9F0</span>, <span class="number">0xE26194C4</span>, <span class="number">0x80799125</span>, <span class="number">0x1F0FC219</span>, <span class="number">0xEB6A1815</span>, <span class="number">0x84F572C5</span>, <span class="number">0x40CC3A85</span>, <span class="number">0xD2A32ABB</span>&#125;;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v0;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v1;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> sum;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>]=&#123;<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">v0=pw[<span class="number">2</span>*i];</span><br><span class="line">v1=pw[<span class="number">2</span>*i+<span class="number">1</span>];</span><br><span class="line">sum=<span class="number">-32</span>*<span class="number">0x61C88647</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">v1 -= ((v0 &gt;&gt; <span class="number">5</span>) + key[<span class="number">3</span>] )^ (<span class="number">16</span> * v0 + key[<span class="number">2</span>]) ^ (sum + v0);<span class="comment">//容易魔改</span></span><br><span class="line">v0 -= ((v1 &gt;&gt; <span class="number">5</span>) + key[<span class="number">1</span>]) ^ (<span class="number">16</span> * v1 + key[<span class="number">0</span>]) ^ (sum + v1);</span><br><span class="line">sum += <span class="number">0x61C88647</span>;<span class="comment">//容易魔改</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j&lt;=<span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (v0 &gt;&gt; (j * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j&lt;=<span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (v1 &gt;&gt; (j * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//SYC&#123;H0w_7o_R@te_YOurs31f_iNtRo?&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/../img/baibai.png" alt="baibai"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Tea类型加密&quot;&gt;&lt;a href=&quot;#Tea类型加密&quot; class=&quot;headerlink&quot; title=&quot;Tea类型加密&quot;&gt;&lt;/a&gt;&lt;strong&gt;Tea类型加密&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;​        很早就想概括tea类型加密了，对于很多刚开始做逆</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://straw-233.github.io/2023/10/29/hello-world/"/>
    <id>https://straw-233.github.io/2023/10/29/hello-world/</id>
    <published>2023-10-29T11:59:56.012Z</published>
    <updated>2023-10-29T11:16:03.137Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
