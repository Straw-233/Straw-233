<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Straw</title>
  
  <subtitle>Straw_blog</subtitle>
  <link href="https://straw-233.github.io/atom.xml" rel="self"/>
  
  <link href="https://straw-233.github.io/"/>
  <updated>2023-11-01T13:51:31.223Z</updated>
  <id>https://straw-233.github.io/</id>
  
  <author>
    <name>Straw</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Tea类型加密</title>
    <link href="https://straw-233.github.io/2023/11/01/tea%E5%8A%A0%E5%AF%86/"/>
    <id>https://straw-233.github.io/2023/11/01/tea%E5%8A%A0%E5%AF%86/</id>
    <published>2023-11-01T13:43:08.336Z</published>
    <updated>2023-11-01T13:51:31.223Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tea类型加密"><a href="#Tea类型加密" class="headerlink" title="Tea类型加密"></a><strong>Tea类型加密</strong></h1><p>​        很早就想概括tea类型加密了，对于很多刚开始做逆向的新手来说，这个掌握好了解题确实快，不像之前的我找到了key，密文，算法，还是因为小错误，而解不出来。作为最基础，也是最常见的加密，确实需要好好总结一番的喵~!</p><p><img src="/../img/taffychayao.png" alt="taffychayao"></p><h2 id="Tea"><a href="#Tea" class="headerlink" title="Tea"></a>Tea</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">encrypt</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span>* v, <span class="type">unsigned</span> <span class="type">int</span>* key)</span> &#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> l = v[<span class="number">0</span>], r = v[<span class="number">1</span>], sum = <span class="number">0</span>, delta = <span class="number">0x9e3779b9</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">    sum += delta;</span><br><span class="line">    l += ((r &lt;&lt; <span class="number">4</span>) + key[<span class="number">0</span>]) ^ (r + sum) ^ ((r &gt;&gt; <span class="number">5</span>) + key[<span class="number">1</span>]);</span><br><span class="line">    r += ((l &lt;&lt; <span class="number">4</span>) + key[<span class="number">2</span>]) ^ (l + sum) ^ ((l &gt;&gt; <span class="number">5</span>) + key[<span class="number">3</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  v[<span class="number">0</span>] = l;</span><br><span class="line">  v[<span class="number">1</span>] = r;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">decrypt</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span>* v, <span class="type">unsigned</span> <span class="type">int</span>* key)</span> &#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> l = v[<span class="number">0</span>], r = v[<span class="number">1</span>], sum = <span class="number">0</span>, delta = <span class="number">0x9e3779b9</span>;</span><br><span class="line">  sum = delta *<span class="number">32</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">    r -= ((l &lt;&lt; <span class="number">4</span>) + key[<span class="number">2</span>]) ^ (l + sum) ^ ((l &gt;&gt; <span class="number">5</span>) + key[<span class="number">3</span>]);</span><br><span class="line">    l -= ((r &lt;&lt; <span class="number">4</span>) + key[<span class="number">0</span>]) ^ (r + sum) ^ ((r &gt;&gt; <span class="number">5</span>) + key[<span class="number">1</span>]);</span><br><span class="line">    sum -= delta;</span><br><span class="line">  &#125;</span><br><span class="line">  v[<span class="number">0</span>] = l;</span><br><span class="line">  v[<span class="number">1</span>] = r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实是一个移位+错位+异或操作结合的算法，逆向解密也是十分容易，将flag以4个unsigned char为一组转为unsigned int加密，注意小端序。</p><p>给出一个我常用的解密脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;<span class="comment">//pw的个数</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> pw[]=&#123;&#125;;<span class="comment">//可改</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v0;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v1;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> sum;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;<span class="comment">//可改</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n/<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">v0=pw[<span class="number">2</span>*i];</span><br><span class="line">v1=pw[<span class="number">2</span>*i+<span class="number">1</span>];</span><br><span class="line">sum=<span class="number">-32</span>*<span class="number">0x61C88647</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">v1 -= ((v0 &gt;&gt; <span class="number">5</span>) + key[<span class="number">3</span>] )^ (<span class="number">16</span> * v0 + key[<span class="number">2</span>]) ^ (sum + v0);<span class="comment">//容易魔改</span></span><br><span class="line">v0 -= ((v1 &gt;&gt; <span class="number">5</span>) + key[<span class="number">1</span>]) ^ (<span class="number">16</span> * v1 + key[<span class="number">0</span>]) ^ (sum + v1);</span><br><span class="line">sum += <span class="number">0x61C88647</span>;<span class="comment">//容易魔改</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j&lt;=<span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (v0 &gt;&gt; (j * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j&lt;=<span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (v1 &gt;&gt; (j * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大多数题目都是给出偶数个unsigned int(4个字节)的密文m，每两段为一组，每一段密文对应的都是4个字母的flag。</p><p>这里再给一个python的脚本（我不怎么常用）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> * </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">v,k</span>):<span class="comment">#加密</span></span><br><span class="line">v0=c_uint32(v[<span class="number">0</span>])</span><br><span class="line">v1=c_uint32(v[<span class="number">1</span>])</span><br><span class="line">sum1=c_uint32(<span class="number">0</span>)</span><br><span class="line">delta=<span class="number">0x9e3779b9</span>  </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">sum1.value+=delta</span><br><span class="line">v0.value+=((v1.value&lt;&lt;<span class="number">4</span>)+k[<span class="number">0</span>])^(v1.value+sum1.value)^((v1.value&gt;&gt;<span class="number">5</span>)+k[<span class="number">1</span>])</span><br><span class="line">v1.value+=((v0.value&lt;&lt;<span class="number">4</span>)+k[<span class="number">2</span>])^(v0.value+sum1.value)^((v0.value&gt;&gt;<span class="number">5</span>)+k[<span class="number">3</span>])</span><br><span class="line"><span class="keyword">return</span> v0.value,v1.value</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">v,k</span>):<span class="comment">#解密</span></span><br><span class="line">v0=c_uint32(v[<span class="number">0</span>])</span><br><span class="line">v1=c_uint32(v[<span class="number">1</span>])</span><br><span class="line">delta=<span class="number">0x9e3779b9</span> </span><br><span class="line">sum1=c_uint32(delta*<span class="number">40</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">40</span>):</span><br><span class="line">v1.value-=((v0.value&lt;&lt;<span class="number">5</span>)+k[<span class="number">2</span>])^(v0.value+sum1.value)^((v0.value&gt;&gt;<span class="number">5</span>)+k[<span class="number">3</span>])</span><br><span class="line">v0.value-=((v1.value&lt;&lt;<span class="number">5</span>)+k[<span class="number">0</span>])^(v1.value+sum1.value)^((v1.value&gt;&gt;<span class="number">5</span>)+k[<span class="number">1</span>])</span><br><span class="line">sum1.value-=delta</span><br><span class="line"><span class="keyword">return</span> v0.value,v1.value</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    k=[<span class="number">2</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="comment"># res=encrypt(a,k)</span></span><br><span class="line">    flag=<span class="string">b&#x27;&#x27;</span></span><br><span class="line">    res=[<span class="number">0x76B9621A</span>, <span class="number">0xCCE4ADDE</span>, <span class="number">0x25C8BFC8</span>, <span class="number">0x16C2D472</span>, <span class="number">0xF317D53A</span>, <span class="number">0xF2A111A1</span>, <span class="number">0xDF89F0E6</span>, <span class="number">0xDCCDA623</span>, <span class="number">0x21C2F409</span>, <span class="number">0xDBD88D63</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(res)//<span class="number">2</span>):</span><br><span class="line">         d = decrypt(res[<span class="number">2</span>*i:<span class="number">2</span>*(i+<span class="number">1</span>)], k)</span><br><span class="line">         flag += long_to_bytes(d[<span class="number">0</span>])[::-<span class="number">1</span>]+long_to_bytes(d[<span class="number">1</span>])[::-<span class="number">1</span>]</span><br><span class="line">    flag += long_to_bytes(res[-<span class="number">1</span>])[::-<span class="number">1</span>]</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h2 id="xTea"><a href="#xTea" class="headerlink" title="xTea"></a>xTea</h2><p>其实跟tea差不多，只是加密方式变了一下</p><p>简单给出加密方式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> n;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> flag[n];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v0,v1;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> delta = <span class="number">0x9E3779B9</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j=j+<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">    v0 = flag[j], v1 = flag[j+<span class="number">1</span>]</span><br><span class="line">    <span class="type">unsigned</span> sum = <span class="number">0</span>; </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">        v0 += (((v1 &lt;&lt; <span class="number">4</span>) ^ (v1 &gt;&gt; <span class="number">5</span>)) + v1) ^ (sum + key[sum &amp; <span class="number">3</span>]);</span><br><span class="line">        sum += delta;</span><br><span class="line">        v1 += (((v0 &lt;&lt; <span class="number">4</span>) ^ (v0 &gt;&gt; <span class="number">5</span>)) + v0) ^ (sum + key[(sum &gt;&gt; <span class="number">11</span>) &amp; <span class="number">3</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">flag[j] = v0; flag[j+<span class="number">1</span>] = v1;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>下面是解密脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> enc[] = &#123;&#125;;</span><br><span class="line"><span class="type">int</span> n;<span class="comment">//enc的个数</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>] = &#123;&#125;;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="type">long</span> sum = <span class="number">0</span>, delta = <span class="number">0x31415927</span>;<span class="comment">//0x9e3779b9=-0x31415927</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i &lt;n;i+=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum = (<span class="number">32</span> * delta);</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">32</span>; j++) </span><br><span class="line">&#123;</span><br><span class="line">sum -= delta;</span><br><span class="line">enc[i] -= (((enc[i+<span class="number">1</span>] &gt;&gt; <span class="number">5</span>) ^ (<span class="number">16</span> * enc[i+<span class="number">1</span>])) + enc[i+<span class="number">1</span>]) ^ (key[(sum &amp; <span class="number">3</span>)] + sum);<span class="comment">//容易魔改</span></span><br><span class="line">enc[i+<span class="number">1</span>] -= (((enc[i] &gt;&gt; <span class="number">5</span>) ^ (<span class="number">16</span> * enc[i])) + enc[i]) ^ (key[((sum &gt;&gt; <span class="number">11</span>) &amp; <span class="number">3</span>)] + sum);<span class="comment">//容易魔改</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 打印</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j&lt;=<span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (enc[i] &gt;&gt; (j * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="xxTea"><a href="#xxTea" class="headerlink" title="xxTea"></a>xxTea</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">xxtea_encrypt</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> *v, <span class="type">int</span> n, <span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>])</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> y, z, sum;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> delta=<span class="number">0x9e3779b9</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> p, rounds, e;</span><br><span class="line">    rounds = <span class="number">6</span> + <span class="number">52</span> / n;</span><br><span class="line">    sum = <span class="number">0</span>;</span><br><span class="line">    z = v[n - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        sum += delta;</span><br><span class="line">        e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span> (p = <span class="number">0</span>; p &lt; n - <span class="number">1</span>; p++) &#123;</span><br><span class="line">            y = v[p + <span class="number">1</span>];</span><br><span class="line">            z = v[p] += (y &gt;&gt; <span class="number">5</span> ^ (z &lt;&lt; <span class="number">2</span>)) + (y &lt;&lt; <span class="number">3</span> ^ (z &gt;&gt; <span class="number">4</span>)) ^ (sum ^ y) + (key[(p &amp; <span class="number">3</span>) ^ e] ^ z);</span><br><span class="line">        &#125;</span><br><span class="line">        y = v[<span class="number">0</span>];</span><br><span class="line">        z = v[n - <span class="number">1</span>] += (y &gt;&gt; <span class="number">5</span> ^ (z &lt;&lt; <span class="number">2</span>)) + (y &lt;&lt; <span class="number">3</span> ^ (z &gt;&gt; <span class="number">4</span>)) ^ (sum ^ y) + (key[(p &amp; <span class="number">3</span>) ^ e] ^ z);</span><br><span class="line">    &#125; <span class="keyword">while</span> (--rounds);</span><br><span class="line">&#125;<span class="comment">//chatgpt跑的</span></span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> delta 0x9e3779b9</span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> v[<span class="number">8</span>] = &#123;<span class="number">0x10BD3B47</span>, <span class="number">0x6155E0F9</span>, <span class="number">0x6AF7EBC5</span>, <span class="number">0x8D23435F</span>, <span class="number">0x1A091605</span>, <span class="number">0xD43D40EF</span>, <span class="number">0xB4B16A67</span>, <span class="number">0x6B3578A9</span>&#125;;<span class="comment">//可改</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>] = &#123;<span class="number">0x00001234</span>, <span class="number">0x00002345</span>, <span class="number">0x00004567</span>, <span class="number">0x00006789</span>&#125;;<span class="comment">//可改</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> y,z,p,rounds,e;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">8</span>;<span class="comment">//v的个数</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    rounds = <span class="number">6</span> + <span class="number">52</span>/n;<span class="comment">//容易魔改</span></span><br><span class="line">    y = v[<span class="number">0</span>];</span><br><span class="line">    sum = rounds*delta;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">     &#123;</span><br><span class="line">        e = sum &gt;&gt; <span class="number">2</span> &amp; <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span>(p=n<span class="number">-1</span>;p&gt;<span class="number">0</span>;p--)</span><br><span class="line">        &#123;</span><br><span class="line">            z = v[p<span class="number">-1</span>];</span><br><span class="line">            v[p] -= ((((z&gt;&gt;<span class="number">5</span>)^(y&lt;&lt;<span class="number">2</span>))+((y&gt;&gt;<span class="number">3</span>)^(z&lt;&lt;<span class="number">4</span>))) ^ ((key[(p&amp;<span class="number">3</span>)^e]^z)+(y ^ sum)));<span class="comment">//容易魔改</span></span><br><span class="line">            y = v[p];</span><br><span class="line">        &#125;</span><br><span class="line">        z = v[n<span class="number">-1</span>];</span><br><span class="line">        v[<span class="number">0</span>] -= (((key[(p^e)&amp;<span class="number">3</span>]^z)+(y ^ sum)) ^ (((y&lt;&lt;<span class="number">2</span>)^(z&gt;&gt;<span class="number">5</span>))+((z&lt;&lt;<span class="number">4</span>)^(y&gt;&gt;<span class="number">3</span>))));<span class="comment">//容易魔改</span></span><br><span class="line">        y = v[<span class="number">0</span>];</span><br><span class="line">        sum = sum-delta;</span><br><span class="line">     &#125;<span class="keyword">while</span>(--rounds);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c&quot;</span>,*((<span class="type">char</span>*)&amp;v[i]+<span class="number">0</span>),*((<span class="type">char</span>*)&amp;v[i]+<span class="number">1</span>),*((<span class="type">char</span>*)&amp;v[i]+<span class="number">2</span>),*((<span class="type">char</span>*)&amp;v[i]+<span class="number">3</span>));</span><br><span class="line">        <span class="comment">//printf(&quot;%c%c%c%c&quot;,*((char*)&amp;v[i]+3),*((char*)&amp;v[i]+2),*((char*)&amp;v[i]+1),*((char*)&amp;v[i]+0));</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><h3 id="2023极客大挑战myslef（tea）"><a href="#2023极客大挑战myslef（tea）" class="headerlink" title="2023极客大挑战myslef（tea）"></a>2023极客大挑战myslef（tea）</h3><p><img src="/../img/myself.png" alt="myself"></p><p>SMC后明显一个tea,甚至密钥都写上去了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> pw[<span class="number">8</span>]=&#123;<span class="number">0xBDBDF9F0</span>, <span class="number">0xE26194C4</span>, <span class="number">0x80799125</span>, <span class="number">0x1F0FC219</span>, <span class="number">0xEB6A1815</span>, <span class="number">0x84F572C5</span>, <span class="number">0x40CC3A85</span>, <span class="number">0xD2A32ABB</span>&#125;;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v0;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v1;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> sum;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>]=&#123;<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">v0=pw[<span class="number">2</span>*i];</span><br><span class="line">v1=pw[<span class="number">2</span>*i+<span class="number">1</span>];</span><br><span class="line">sum=<span class="number">-32</span>*<span class="number">0x61C88647</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">v1 -= ((v0 &gt;&gt; <span class="number">5</span>) + key[<span class="number">3</span>] )^ (<span class="number">16</span> * v0 + key[<span class="number">2</span>]) ^ (sum + v0);<span class="comment">//容易魔改</span></span><br><span class="line">v0 -= ((v1 &gt;&gt; <span class="number">5</span>) + key[<span class="number">1</span>]) ^ (<span class="number">16</span> * v1 + key[<span class="number">0</span>]) ^ (sum + v1);</span><br><span class="line">sum += <span class="number">0x61C88647</span>;<span class="comment">//容易魔改</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j&lt;=<span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (v0 &gt;&gt; (j * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j&lt;=<span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (v1 &gt;&gt; (j * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//SYC&#123;H0w_7o_R@te_YOurs31f_iNtRo?&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/../img/baibai.png" alt="baibai"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Tea类型加密&quot;&gt;&lt;a href=&quot;#Tea类型加密&quot; class=&quot;headerlink&quot; title=&quot;Tea类型加密&quot;&gt;&lt;/a&gt;&lt;strong&gt;Tea类型加密&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;​        很早就想概括tea类型加密了，对于很多刚开始做逆</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://straw-233.github.io/2023/10/29/hello-world/"/>
    <id>https://straw-233.github.io/2023/10/29/hello-world/</id>
    <published>2023-10-29T11:59:56.012Z</published>
    <updated>2023-10-29T11:16:03.137Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
